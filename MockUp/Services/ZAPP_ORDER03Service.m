/*
 
 Auto-Generated by the SAP NetWeaver Gateway developer tool for Xcode, Version 2.5.300.0
  
 File: ZAPP_ORDER03Service.h
 Abstract: The generated proxy classes for the ZAPP_ORDER03 Service. Service Version: 1.  
*/

#import "ZAPP_ORDER03Service.h"
#import "BaseODataObject.h"
#import "Logger.h"
#import "SDMODataEntitySchema.h"
#import "SDMODataCollection.h"
#import "SDMODataFunctionImport.h"
#import "TypeConverter.h"

#define ZAPP_ORDER03_SERVICE_DOCUMENT @"ZAPP_ORDER03ServiceDocument"
#define ZAPP_ORDER03_SERVICE_METADATA @"ZAPP_ORDER03ServiceMetadata"

#pragma mark - Complex Types



#pragma mark - Entity Types


#pragma mark - AZAPP_ORDER03Result
@implementation AZAPP_ORDER03Result 

@synthesize ROWID = m_ROWID;
@synthesize A0SOLD_TO = m_A0SOLD_TO;
@synthesize A0SOLD_TO_T = m_A0SOLD_TO_T;
@synthesize A0DOC_CATEG = m_A0DOC_CATEG;
@synthesize A0DOC_CATEG_T = m_A0DOC_CATEG_T;
@synthesize A0MATERIAL__0MATL_GROUP = m_A0MATERIAL__0MATL_GROUP;
@synthesize A0MATERIAL__0MATL_GROUP_T = m_A0MATERIAL__0MATL_GROUP_T;
@synthesize A0MATERIAL = m_A0MATERIAL;
@synthesize A0MATERIAL_T = m_A0MATERIAL_T;
@synthesize A006EI3ULWC7I23F35O4FOUU4C = m_A006EI3ULWC7I23F35O4FOUU4C;
@synthesize A006EI3ULWC7I23F35O4FOUU4C_F = m_A006EI3ULWC7I23F35O4FOUU4C_F;
@synthesize A006EI3ULWC7I23F488ZUG7MYK = m_A006EI3ULWC7I23F488ZUG7MYK;
@synthesize A006EI3ULWC7I23F488ZUG7MYK_F = m_A006EI3ULWC7I23F488ZUG7MYK_F;
@synthesize ISTOTAL = m_ISTOTAL;

static NSMutableDictionary *aZAPP_ORDER03ResultLabels = nil;
static SDMODataEntitySchema *aZAPP_ORDER03ResultEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptySDMODataEntryWithSchema:aZAPP_ORDER03ResultEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        m_baseUrl = nil;
    }
    return self;
}



- (SDMODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ROWID forSDMPropertyWithName:@"ROWID" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0SOLD_TO forSDMPropertyWithName:@"A0SOLD_TO" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0SOLD_TO_T forSDMPropertyWithName:@"A0SOLD_TO_T" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0DOC_CATEG forSDMPropertyWithName:@"A0DOC_CATEG" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0DOC_CATEG_T forSDMPropertyWithName:@"A0DOC_CATEG_T" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0MATERIAL__0MATL_GROUP forSDMPropertyWithName:@"A0MATERIAL__0MATL_GROUP" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0MATERIAL__0MATL_GROUP_T forSDMPropertyWithName:@"A0MATERIAL__0MATL_GROUP_T" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0MATERIAL forSDMPropertyWithName:@"A0MATERIAL" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0MATERIAL_T forSDMPropertyWithName:@"A0MATERIAL_T" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.A006EI3ULWC7I23F35O4FOUU4C forSDMPropertyWithName:@"A006EI3ULWC7I23F35O4FOUU4C" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A006EI3ULWC7I23F35O4FOUU4C_F forSDMPropertyWithName:@"A006EI3ULWC7I23F35O4FOUU4C_F" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.A006EI3ULWC7I23F488ZUG7MYK forSDMPropertyWithName:@"A006EI3ULWC7I23F488ZUG7MYK" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A006EI3ULWC7I23F488ZUG7MYK_F forSDMPropertyWithName:@"A006EI3ULWC7I23F488ZUG7MYK_F" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ISTOTAL forSDMPropertyWithName:@"ISTOTAL" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService
{
    SDMODataCollection *collectionSchema = [aService.schema getCollectionByName:@"AZAPP_ORDER03Results" workspaceOfCollection:nil];
    aZAPP_ORDER03ResultEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(SDMODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"AZAPP_ORDER03Results" andService:aService];
    	if (properties) {    
	    	aZAPP_ORDER03ResultLabels = [NSMutableDictionary dictionary];
	    	for (SDMODataPropertyInfo *property in [properties allValues]) {
	        	[aZAPP_ORDER03ResultLabels setValue:property.label forKey:property.name];
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:aZAPP_ORDER03ResultLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	m_ROWID = [self getStringValueForSDMPropertyWithName:@"ROWID"];
	m_A0SOLD_TO = [self getStringValueForSDMPropertyWithName:@"A0SOLD_TO"];
	m_A0SOLD_TO_T = [self getStringValueForSDMPropertyWithName:@"A0SOLD_TO_T"];
	m_A0DOC_CATEG = [self getStringValueForSDMPropertyWithName:@"A0DOC_CATEG"];
	m_A0DOC_CATEG_T = [self getStringValueForSDMPropertyWithName:@"A0DOC_CATEG_T"];
	m_A0MATERIAL__0MATL_GROUP = [self getStringValueForSDMPropertyWithName:@"A0MATERIAL__0MATL_GROUP"];
	m_A0MATERIAL__0MATL_GROUP_T = [self getStringValueForSDMPropertyWithName:@"A0MATERIAL__0MATL_GROUP_T"];
	m_A0MATERIAL = [self getStringValueForSDMPropertyWithName:@"A0MATERIAL"];
	m_A0MATERIAL_T = [self getStringValueForSDMPropertyWithName:@"A0MATERIAL_T"];
	m_A006EI3ULWC7I23F35O4FOUU4C = [self getDecimalValueForSDMPropertyWithName:@"A006EI3ULWC7I23F35O4FOUU4C"];
	m_A006EI3ULWC7I23F35O4FOUU4C_F = [self getStringValueForSDMPropertyWithName:@"A006EI3ULWC7I23F35O4FOUU4C_F"];
	m_A006EI3ULWC7I23F488ZUG7MYK = [self getDecimalValueForSDMPropertyWithName:@"A006EI3ULWC7I23F488ZUG7MYK"];
	m_A006EI3ULWC7I23F488ZUG7MYK_F = [self getStringValueForSDMPropertyWithName:@"A006EI3ULWC7I23F488ZUG7MYK_F"];
	m_ISTOTAL = [self getStringValueForSDMPropertyWithName:@"ISTOTAL"];
}

+ (NSMutableArray *)createAZAPP_ORDER03ResultEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [NSMutableArray array];
    for (SDMODataEntry *entry in sdmEntries) {
        AZAPP_ORDER03Result *aZAPP_ORDER03ResultObject = [[AZAPP_ORDER03Result alloc] initWithSDMEntry:entry];
        [entries addObject:aZAPP_ORDER03ResultObject];
    }
    return entries;
}


+ (NSMutableArray *)parseAZAPP_ORDER03ResultEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:aZAPP_ORDER03ResultEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [AZAPP_ORDER03Result createAZAPP_ORDER03ResultEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedAZAPP_ORDER03ResultEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:aZAPP_ORDER03ResultEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [AZAPP_ORDER03Result createAZAPP_ORDER03ResultEntriesForSDMEntries:sdmEntries];
}

+ (AZAPP_ORDER03Result *)parseAZAPP_ORDER03ResultEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *aZAPP_ORDER03ResultEntries = [AZAPP_ORDER03Result parseAZAPP_ORDER03ResultEntriesWithData:aData error:error];
    if (!aZAPP_ORDER03ResultEntries) {
    	return nil;
    }
    return (AZAPP_ORDER03Result *)[AZAPP_ORDER03Result getFirstObjectFromArray:aZAPP_ORDER03ResultEntries];
}

+ (AZAPP_ORDER03Result *)parseExpandedAZAPP_ORDER03ResultEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:aZAPP_ORDER03ResultEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *aZAPP_ORDER03ResultEntries = [AZAPP_ORDER03Result createAZAPP_ORDER03ResultEntriesForSDMEntries:sdmEntries];
	return (AZAPP_ORDER03Result *)[AZAPP_ORDER03Result getFirstObjectFromArray:aZAPP_ORDER03ResultEntries];
}



@end

#pragma mark - AZAPP_ORDER03Parameters
@implementation AZAPP_ORDER03Parameters 

@synthesize ZDOCCAT1From = m_ZDOCCAT1From;
@synthesize ZDOCCAT1To = m_ZDOCCAT1To;
@synthesize ZDOCCAT1Text = m_ZDOCCAT1Text;
@synthesize A0S_CUSTOFrom = m_A0S_CUSTOFrom;
@synthesize A0S_CUSTOTo = m_A0S_CUSTOTo;
@synthesize A0S_CUSTOText = m_A0S_CUSTOText;
@synthesize A0S_MATGFrom = m_A0S_MATGFrom;
@synthesize A0S_MATGTo = m_A0S_MATGTo;
@synthesize A0S_MATGText = m_A0S_MATGText;
@synthesize ResultsQuery = m_ResultsQuery;
@synthesize Results = m_Results;

static NSMutableDictionary *aZAPP_ORDER03ParametersLabels = nil;
static SDMODataEntitySchema *aZAPP_ORDER03ParametersEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptySDMODataEntryWithSchema:aZAPP_ORDER03ParametersEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        m_baseUrl = nil;
    }
    return self;
}

- (NSMutableDictionary *)getSDMEntriesForNavigationProperties
{
    NSMutableDictionary *dictionary = [NSMutableDictionary dictionary];
    if ([self.Results count] > 0) {
        [dictionary setObject:[self createSDMEntriesForNavigationPropertyEntries:self.Results] forKey:@"Results"];
    }
    return dictionary;
}


- (SDMODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ZDOCCAT1From forSDMPropertyWithName:@"ZDOCCAT1From" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ZDOCCAT1To forSDMPropertyWithName:@"ZDOCCAT1To" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ZDOCCAT1Text forSDMPropertyWithName:@"ZDOCCAT1Text" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0S_CUSTOFrom forSDMPropertyWithName:@"A0S_CUSTOFrom" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0S_CUSTOTo forSDMPropertyWithName:@"A0S_CUSTOTo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0S_CUSTOText forSDMPropertyWithName:@"A0S_CUSTOText" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0S_MATGFrom forSDMPropertyWithName:@"A0S_MATGFrom" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0S_MATGTo forSDMPropertyWithName:@"A0S_MATGTo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.A0S_MATGText forSDMPropertyWithName:@"A0S_MATGText" error:&innerError];
        [self addRelativeLinksToSDMEntryFromDictionary:[self getSDMEntriesForNavigationProperties]];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService
{
    SDMODataCollection *collectionSchema = [aService.schema getCollectionByName:@"AZAPP_ORDER03" workspaceOfCollection:nil];
    aZAPP_ORDER03ParametersEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(SDMODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"AZAPP_ORDER03" andService:aService];
    	if (properties) {    
	    	aZAPP_ORDER03ParametersLabels = [NSMutableDictionary dictionary];
	    	for (SDMODataPropertyInfo *property in [properties allValues]) {
	        	[aZAPP_ORDER03ParametersLabels setValue:property.label forKey:property.name];
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:aZAPP_ORDER03ParametersLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	m_ZDOCCAT1From = [self getStringValueForSDMPropertyWithName:@"ZDOCCAT1From"];
	m_ZDOCCAT1To = [self getStringValueForSDMPropertyWithName:@"ZDOCCAT1To"];
	m_ZDOCCAT1Text = [self getStringValueForSDMPropertyWithName:@"ZDOCCAT1Text"];
	m_A0S_CUSTOFrom = [self getStringValueForSDMPropertyWithName:@"A0S_CUSTOFrom"];
	m_A0S_CUSTOTo = [self getStringValueForSDMPropertyWithName:@"A0S_CUSTOTo"];
	m_A0S_CUSTOText = [self getStringValueForSDMPropertyWithName:@"A0S_CUSTOText"];
	m_A0S_MATGFrom = [self getStringValueForSDMPropertyWithName:@"A0S_MATGFrom"];
	m_A0S_MATGTo = [self getStringValueForSDMPropertyWithName:@"A0S_MATGTo"];
	m_A0S_MATGText = [self getStringValueForSDMPropertyWithName:@"A0S_MATGText"];
}

- (void)loadNavigationPropertyQueries
{
    [super loadNavigationPropertyQueries];
    m_ResultsQuery = [self getRelatedLinkForNavigationName:@"Results"];
}

- (void)loadNavigationPropertyData
{
    [super loadNavigationPropertyData];
    
    NSMutableArray *entries = nil;

    entries = [self getInlinedRelatedEntriesForNavigationName:@"Results"];
    m_Results = [AZAPP_ORDER03Result createAZAPP_ORDER03ResultEntriesForSDMEntries:entries];

}

+ (NSMutableArray *)createAZAPP_ORDER03ParametersEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [NSMutableArray array];
    for (SDMODataEntry *entry in sdmEntries) {
        AZAPP_ORDER03Parameters *aZAPP_ORDER03ParametersObject = [[AZAPP_ORDER03Parameters alloc] initWithSDMEntry:entry];
        [entries addObject:aZAPP_ORDER03ParametersObject];
    }
    return entries;
}


+ (NSMutableArray *)parseAZAPP_ORDER03ParametersEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:aZAPP_ORDER03ParametersEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [AZAPP_ORDER03Parameters createAZAPP_ORDER03ParametersEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedAZAPP_ORDER03ParametersEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:aZAPP_ORDER03ParametersEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [AZAPP_ORDER03Parameters createAZAPP_ORDER03ParametersEntriesForSDMEntries:sdmEntries];
}

+ (AZAPP_ORDER03Parameters *)parseAZAPP_ORDER03ParametersEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *aZAPP_ORDER03ParametersEntries = [AZAPP_ORDER03Parameters parseAZAPP_ORDER03ParametersEntriesWithData:aData error:error];
    if (!aZAPP_ORDER03ParametersEntries) {
    	return nil;
    }
    return (AZAPP_ORDER03Parameters *)[AZAPP_ORDER03Parameters getFirstObjectFromArray:aZAPP_ORDER03ParametersEntries];
}

+ (AZAPP_ORDER03Parameters *)parseExpandedAZAPP_ORDER03ParametersEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:aZAPP_ORDER03ParametersEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *aZAPP_ORDER03ParametersEntries = [AZAPP_ORDER03Parameters createAZAPP_ORDER03ParametersEntriesForSDMEntries:sdmEntries];
	return (AZAPP_ORDER03Parameters *)[AZAPP_ORDER03Parameters getFirstObjectFromArray:aZAPP_ORDER03ParametersEntries];
}


#pragma mark Entity Navigation Property loading methods
- (BOOL)loadResultsWithData:(NSData *)aData error:(NSError **)error
{
    self.Results = [AZAPP_ORDER03Result parseAZAPP_ORDER03ResultEntriesWithData:aData error:error];
    if (!self.Results) {
    	return NO;
    }
    return YES;
}


@end


#pragma mark - ZAPP_ORDER03 Service Proxy


@implementation ZAPP_ORDER03Service

@synthesize AZAPP_ORDER03Query = m_AZAPP_ORDER03Query;
@synthesize AZAPP_ORDER03ResultsQuery = m_AZAPP_ORDER03ResultsQuery;

- (NSString *)getServiceDocumentFilename
{
	return ZAPP_ORDER03_SERVICE_DOCUMENT;
}

- (NSString *)getServiceMetadataFilename
{
	return ZAPP_ORDER03_SERVICE_METADATA;
}

- (void)loadEntitySetQueries
{
	[super loadEntitySetQueries];
    m_AZAPP_ORDER03Query = [self getQueryForRelativePath:@"AZAPP_ORDER03"];
    m_AZAPP_ORDER03ResultsQuery = [self getQueryForRelativePath:@"AZAPP_ORDER03Results"];
}

- (void)loadEntitySchemaForAllEntityTypes
{
    [super loadEntitySchemaForAllEntityTypes];
    [AZAPP_ORDER03Result loadEntitySchema:m_serviceDocument];
    [AZAPP_ORDER03Parameters loadEntitySchema:m_serviceDocument];
}

- (void)loadLabels
{
    [super loadLabels];
    [AZAPP_ORDER03Result loadLabels:m_serviceDocument];
    [AZAPP_ORDER03Parameters loadLabels:m_serviceDocument];
}

 
#pragma mark Service Entity Set methods
- (NSMutableArray *)getAZAPP_ORDER03WithData:(NSData *)aData error:(NSError **)error
{
	return [AZAPP_ORDER03Parameters parseExpandedAZAPP_ORDER03ParametersEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getAZAPP_ORDER03EntryQueryWithZDOCCAT1From:(NSString *)ZDOCCAT1From andZDOCCAT1To:(NSString *)ZDOCCAT1To andA0S_CUSTOFrom:(NSString *)A0S_CUSTOFrom andA0S_CUSTOTo:(NSString *)A0S_CUSTOTo andA0S_MATGFrom:(NSString *)A0S_MATGFrom andA0S_MATGTo:(NSString *)A0S_MATGTo
{
	ZDOCCAT1From = [ODataQuery encodeURLParameter:ZDOCCAT1From];
	ZDOCCAT1To = [ODataQuery encodeURLParameter:ZDOCCAT1To];
	A0S_CUSTOFrom = [ODataQuery encodeURLParameter:A0S_CUSTOFrom];
	A0S_CUSTOTo = [ODataQuery encodeURLParameter:A0S_CUSTOTo];
	A0S_MATGFrom = [ODataQuery encodeURLParameter:A0S_MATGFrom];
	A0S_MATGTo = [ODataQuery encodeURLParameter:A0S_MATGTo];
	NSString *relativePath = [NSString stringWithFormat:@"AZAPP_ORDER03(ZDOCCAT1From=%@,ZDOCCAT1To=%@,A0S_CUSTOFrom=%@,A0S_CUSTOTo=%@,A0S_MATGFrom=%@,A0S_MATGTo=%@)", ZDOCCAT1From, ZDOCCAT1To, A0S_CUSTOFrom, A0S_CUSTOTo, A0S_MATGFrom, A0S_MATGTo];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getAZAPP_ORDER03EntryQueryTypedWithZDOCCAT1From:(NSString *)ZDOCCAT1From andZDOCCAT1To:(NSString *)ZDOCCAT1To andA0S_CUSTOFrom:(NSString *)A0S_CUSTOFrom andA0S_CUSTOTo:(NSString *)A0S_CUSTOTo andA0S_MATGFrom:(NSString *)A0S_MATGFrom andA0S_MATGTo:(NSString *)A0S_MATGTo
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *ZDOCCAT1FromUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ZDOCCAT1From]];
	NSString *ZDOCCAT1ToUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ZDOCCAT1To]];
	NSString *A0S_CUSTOFromUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:A0S_CUSTOFrom]];
	NSString *A0S_CUSTOToUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:A0S_CUSTOTo]];
	NSString *A0S_MATGFromUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:A0S_MATGFrom]];
	NSString *A0S_MATGToUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:A0S_MATGTo]];
	NSString *relativePath = [NSString stringWithFormat:@"AZAPP_ORDER03(ZDOCCAT1From=%@,ZDOCCAT1To=%@,A0S_CUSTOFrom=%@,A0S_CUSTOTo=%@,A0S_MATGFrom=%@,A0S_MATGTo=%@)", ZDOCCAT1FromUri, ZDOCCAT1ToUri, A0S_CUSTOFromUri, A0S_CUSTOToUri, A0S_MATGFromUri, A0S_MATGToUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (AZAPP_ORDER03Parameters *)getAZAPP_ORDER03EntryWithData:(NSData *)aData error:(NSError **)error
{
	return [AZAPP_ORDER03Parameters parseExpandedAZAPP_ORDER03ParametersEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getAZAPP_ORDER03ResultsWithData:(NSData *)aData error:(NSError **)error
{
	return [AZAPP_ORDER03Result parseExpandedAZAPP_ORDER03ResultEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getAZAPP_ORDER03ResultsEntryQueryWithROWID:(NSString *)ROWID
{
	ROWID = [ODataQuery encodeURLParameter:ROWID];
	NSString *relativePath = [NSString stringWithFormat:@"AZAPP_ORDER03Results(ROWID=%@)", ROWID];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getAZAPP_ORDER03ResultsEntryQueryTypedWithROWID:(NSString *)ROWID
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *ROWIDUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ROWID]];
	NSString *relativePath = [NSString stringWithFormat:@"AZAPP_ORDER03Results(ROWID=%@)", ROWIDUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (AZAPP_ORDER03Result *)getAZAPP_ORDER03ResultsEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [AZAPP_ORDER03Result parseExpandedAZAPP_ORDER03ResultEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}



#pragma mark Service Function Import methods 

@end
