/*
 
 Auto-Generated by the SAP NetWeaver Gateway developer tool for Xcode, Version 2.5.300.0
  
 File: SALESAPP_SRVService.h
 Abstract: The generated proxy classes for the SALESAPP_SRV Service. Service Version: 1.   
*/

#import <Foundation/Foundation.h>
#import "BaseEntityType.h"
#import "BaseComplexType.h"
#import "BaseServiceObject.h"

#pragma mark - Complex Types

@class SalesOrderStatus;

#pragma mark SalesOrderStatus
@interface SalesOrderStatus : BaseComplexType {
	NSString *m_Delivery;
	NSString *m_Invoice;
	NSString *m_Overall;
}

@property (strong, nonatomic) NSString *Delivery; ///< Delivery - Edm.String

@property (strong, nonatomic) NSString *Invoice; ///< Invoice - Edm.String

@property (strong, nonatomic) NSString *Overall; ///< Overall - Edm.String


/**
 Static method that loads all of the complex type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param sdmProperties Dictionary containing all of the complex type properties.
*/
+ (void)loadLabels:(NSMutableDictionary *)sdmProperties;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;

@end



#pragma mark - Entity Types

/**
 Each of the following classes represents an entity-type of the SALESAPP_SRVService service.
 
 Any entity-type class should be used as following:
 
 1. The entity object may represent an existing entry of an appropriate service collection,
 if the object is initialized using data returned from an appropriate service call.
 This may be achieved by using the initWithSDMEntry: constructor,
 or using the static methods creating the entity object (parse<entity-type-name>EntriesWithData,
 parse<entity-type-name>EntryWithData, and create<entity-type-name>EntriesForSDMEntries).
 
 For retrieving the entry data, use the appropriate query properties and methods of this class 
 and of the SALESAPP_SRVService class, and then execute the request (see the SDMConnectivityHelper class).
 
 2. Another option is to use this entity object as a new entry to create in an appropriate service collection.
 In this case, use the init constructor and set the appropriate properties. 
 Note that some features (as navigation properties) are not available in this mode (since it is not yet an actual service entry).
 Use the SDMConnectivityHelper class and the getXMLForCreateRequest method of the BaseServiceObject class, to send the 'create' request.
 Then use the service response for constructing a new object, in order to represent the entry as existed in the service. 
 
 In both operation modes, setting the entity property values will not affect the service until the changes are sent to the server.
 For sending changes to the server, see the SDMConnectivityHelper class and the getXMLForRequest methods of the BaseServiceObject class.
 It is recommended to use the server response for constructing a new object, in order to represent the entry as existed in the service.
 
 Note: For proper behavior of this class, make sure to initialize the SALESAPP_SRVService class
 in your application, before initializing the entity-type class objects.
*/
 

#pragma mark - ContactPerson
@interface ContactPerson : BaseEntityType {
	NSString *m_TelephoneNumber;
	NSString *m_Country;
	NSString *m_Region;
	NSString *m_City;
	NSString *m_PostalCode;
	NSString *m_HouseNumber;
	NSString *m_Street;
	NSString *m_LastName;
	NSString *m_FirstName;
	NSString *m_ContactPersonID;
	NSString *m_FaxNumber;
	NSString *m_Email;
	NSString *m_Url;
	NSString *m_Gender;
	NSString *m_RelatedPartnerID;
	NSString *m_Landx50;

}

@property (strong, nonatomic) NSString *TelephoneNumber; ///< TelephoneNumber - Edm.String
@property (strong, nonatomic) NSString *Country; ///< Country - Edm.String
@property (strong, nonatomic) NSString *Region; ///< Region - Edm.String
@property (strong, nonatomic) NSString *City; ///< City - Edm.String
@property (strong, nonatomic) NSString *PostalCode; ///< PostalCode - Edm.String
@property (strong, nonatomic) NSString *HouseNumber; ///< HouseNumber - Edm.String
@property (strong, nonatomic) NSString *Street; ///< Street - Edm.String
@property (strong, nonatomic) NSString *LastName; ///< LastName - Edm.String
@property (strong, nonatomic) NSString *FirstName; ///< FirstName - Edm.String
@property (strong, nonatomic) NSString *ContactPersonID; ///< ContactPersonID - Edm.String
@property (strong, nonatomic) NSString *FaxNumber; ///< FaxNumber - Edm.String
@property (strong, nonatomic) NSString *Email; ///< Email - Edm.String
@property (strong, nonatomic) NSString *Url; ///< Url - Edm.String
@property (strong, nonatomic) NSString *Gender; ///< Gender - Edm.String
@property (strong, nonatomic) NSString *RelatedPartnerID; ///< RelatedPartnerID - Edm.String
@property (strong, nonatomic) NSString *Landx50; ///< Landx50 - Edm.String

#pragma mark Static Methods
/**
 Static method that returns an array of ContactPerson entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to ContactPerson entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of ContactPerson entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseContactPersonEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of ContactPerson entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to ContactPerson entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of ContactPerson entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedContactPersonEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single ContactPerson entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a ContactPerson entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a ContactPerson entity. Returns nil if the data in invalid.
*/
+ (ContactPerson *)parseContactPersonEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single ContactPerson entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a ContactPerson entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a ContactPerson entity. Returns nil if the data in invalid.
*/
+ (ContactPerson *)parseExpandedContactPersonEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of ContactPerson objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of ContactPerson objects.
*/
+ (NSMutableArray *)createContactPersonEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;



@end

#pragma mark - Image
@interface Image : BaseEntityType {
	NSString *m_ImageType;
	NSString *m_ImageKey;
	NSString *m_MimeType;
	NSString *m_Image_b64;
	NSString *m_Filename;

}

@property (strong, nonatomic) NSString *ImageType; ///< ImageType - Edm.String
@property (strong, nonatomic) NSString *ImageKey; ///< ImageKey - Edm.String
@property (strong, nonatomic) NSString *MimeType; ///< MimeType - Edm.String
@property (strong, nonatomic) NSString *Image_b64; ///< Image_b64 - Edm.String
@property (strong, nonatomic) NSString *Filename; ///< Filename - Edm.String

#pragma mark Static Methods
/**
 Static method that returns an array of Image entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to Image entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of Image entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseImageEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of Image entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to Image entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of Image entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedImageEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single Image entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a Image entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a Image entity. Returns nil if the data in invalid.
*/
+ (Image *)parseImageEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single Image entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a Image entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a Image entity. Returns nil if the data in invalid.
*/
+ (Image *)parseExpandedImageEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of Image objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of Image objects.
*/
+ (NSMutableArray *)createImageEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;



@end

#pragma mark - MediaForBusinessPartner
@interface MediaForBusinessPartner : BaseEntityType {
	NSString *m_BusinessPartnerID;
	NSString *m_MediaID;
	NSString *m_MimeType;
	NSString *m_FileName;
	NSNumber *m_FileSize;
	MediaLink *m_mediaLinkRead;
	MediaLink *m_mediaLinkEdit;

}

@property (strong, nonatomic) NSString *BusinessPartnerID; ///< BusinessPartnerID - Edm.String
@property (strong, nonatomic) NSString *MediaID; ///< MediaID - Edm.String
@property (strong, nonatomic) NSString *MimeType; ///< MimeType - Edm.String
@property (strong, nonatomic) NSString *FileName; ///< FileName - Edm.String
@property (strong, nonatomic) NSNumber *FileSize; ///< Int2 - Edm.Int16
#pragma mark Entity Media Link Properties
@property (strong, readonly) MediaLink *mediaLinkRead; ///< Media Link Read - Holds the ODataQuery and Content-Type of the media link for read
@property (strong, readonly) MediaLink *mediaLinkEdit; ///< Media Link Edit - Holds the ODataQuery and Content-Type of the media link for update

#pragma mark Static Methods
/**
 Static method that returns an array of MediaForBusinessPartner entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to MediaForBusinessPartner entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of MediaForBusinessPartner entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseMediaForBusinessPartnerEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of MediaForBusinessPartner entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to MediaForBusinessPartner entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of MediaForBusinessPartner entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedMediaForBusinessPartnerEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single MediaForBusinessPartner entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a MediaForBusinessPartner entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a MediaForBusinessPartner entity. Returns nil if the data in invalid.
*/
+ (MediaForBusinessPartner *)parseMediaForBusinessPartnerEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single MediaForBusinessPartner entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a MediaForBusinessPartner entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a MediaForBusinessPartner entity. Returns nil if the data in invalid.
*/
+ (MediaForBusinessPartner *)parseExpandedMediaForBusinessPartnerEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of MediaForBusinessPartner objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of MediaForBusinessPartner objects.
*/
+ (NSMutableArray *)createMediaForBusinessPartnerEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;



@end

#pragma mark - BusinessPartner
@interface BusinessPartner : BaseEntityType {
	NSString *m_Landx50;
	NSString *m_PartnerID;
	NSString *m_PartnerType;
	NSString *m_Name;
	NSString *m_Street;
	NSString *m_HouseNumber;
	NSString *m_PostalCode;
	NSString *m_City;
	NSString *m_Region;
	NSString *m_Country;
	NSString *m_TelephoneNumber;
	NSString *m_FaxNumber;
	NSString *m_Email;
	NSString *m_Latitude;
	NSString *m_Longitude;
	NSString *m_Url;
    ODataQuery *m_ContactPersonsQuery;
	NSMutableArray *m_ContactPersons;
    ODataQuery *m_BusinessPartner2MediaCollectionQuery;
	NSMutableArray *m_BusinessPartner2MediaCollection;

}

@property (strong, nonatomic) NSString *Landx50; ///< Landx50 - Edm.String
@property (strong, nonatomic) NSString *PartnerID; ///< PartnerID - Edm.String
@property (strong, nonatomic) NSString *PartnerType; ///< PartnerType - Edm.String
@property (strong, nonatomic) NSString *Name; ///< Name - Edm.String
@property (strong, nonatomic) NSString *Street; ///< Street - Edm.String
@property (strong, nonatomic) NSString *HouseNumber; ///< HouseNumber - Edm.String
@property (strong, nonatomic) NSString *PostalCode; ///< PostalCode - Edm.String
@property (strong, nonatomic) NSString *City; ///< City - Edm.String
@property (strong, nonatomic) NSString *Region; ///< Region - Edm.String
@property (strong, nonatomic) NSString *Country; ///< Country - Edm.String
@property (strong, nonatomic) NSString *TelephoneNumber; ///< TelephoneNumber - Edm.String
@property (strong, nonatomic) NSString *FaxNumber; ///< FaxNumber - Edm.String
@property (strong, nonatomic) NSString *Email; ///< Email - Edm.String
@property (strong, nonatomic) NSString *Latitude; ///< Latitude - Edm.String
@property (strong, nonatomic) NSString *Longitude; ///< Longitude - Edm.String
@property (strong, nonatomic) NSString *Url; ///< Url - Edm.String
#pragma mark Entity Navigation Properties
@property (strong, nonatomic) ODataQuery *ContactPersonsQuery;
@property (strong, nonatomic) NSMutableArray *ContactPersons;
@property (strong, nonatomic) ODataQuery *BusinessPartner2MediaCollectionQuery;
@property (strong, nonatomic) NSMutableArray *BusinessPartner2MediaCollection;

#pragma mark Static Methods
/**
 Static method that returns an array of BusinessPartner entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to BusinessPartner entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of BusinessPartner entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseBusinessPartnerEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of BusinessPartner entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to BusinessPartner entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of BusinessPartner entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedBusinessPartnerEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single BusinessPartner entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a BusinessPartner entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a BusinessPartner entity. Returns nil if the data in invalid.
*/
+ (BusinessPartner *)parseBusinessPartnerEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single BusinessPartner entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a BusinessPartner entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a BusinessPartner entity. Returns nil if the data in invalid.
*/
+ (BusinessPartner *)parseExpandedBusinessPartnerEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of BusinessPartner objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of BusinessPartner objects.
*/
+ (NSMutableArray *)createBusinessPartnerEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;


#pragma mark Entity Navigation Property loading methods
/**
 Navigation property. Loads ContactPersons details for this entity from the provided data.
 @param aData The NSData containing the ContactPersons information to be parsed.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns YES if the method completed successfully.
*/
- (BOOL)loadContactPersonsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Navigation property. Loads BusinessPartner2MediaCollection details for this entity from the provided data.
 @param aData The NSData containing the BusinessPartner2MediaCollection information to be parsed.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns YES if the method completed successfully.
*/
- (BOOL)loadBusinessPartner2MediaCollectionWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;


@end

#pragma mark - Material
@interface Material : BaseEntityType {
	NSString *m_SalesOrganization;
	NSString *m_EANCode;
	NSString *m_EANCategory;
	NSString *m_MaterialNumber;
	NSString *m_Description;
	NSString *m_Plant;
	NSNumber *m_Quantity;
	NSString *m_UoM;

}

@property (strong, nonatomic) NSString *SalesOrganization; ///< SalesOrganization - Edm.String
@property (strong, nonatomic) NSString *EANCode; ///< EANCode - Edm.String
@property (strong, nonatomic) NSString *EANCategory; ///< EANCategory - Edm.String
@property (strong, nonatomic) NSString *MaterialNumber; ///< MaterialNumber - Edm.String
@property (strong, nonatomic) NSString *Description; ///< Description - Edm.String
@property (strong, nonatomic) NSString *Plant; ///< Plant - Edm.String
@property (strong, nonatomic) NSNumber *Quantity; ///< Int2 - Edm.Int16
@property (strong, nonatomic) NSString *UoM; ///< UoM - Edm.String

#pragma mark Static Methods
/**
 Static method that returns an array of Material entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to Material entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of Material entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseMaterialEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of Material entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to Material entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of Material entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedMaterialEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single Material entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a Material entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a Material entity. Returns nil if the data in invalid.
*/
+ (Material *)parseMaterialEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single Material entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a Material entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a Material entity. Returns nil if the data in invalid.
*/
+ (Material *)parseExpandedMaterialEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of Material objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of Material objects.
*/
+ (NSMutableArray *)createMaterialEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;



@end

#pragma mark - SalesDocument
@interface SalesDocument : BaseEntityType {
	SalesOrderStatus *m_status;
	NSString *m_OrderID;
	NSString *m_OrderType;
	NSString *m_Description;
	NSDate *m_DocumentDate;
	NSString *m_CustomerID;
	NSString *m_SalesOrganization;
	NSString *m_DistribuitonChannel;
	NSString *m_Division;
	NSDecimalNumber *m_NetValue;
	NSString *m_Currency;
	NSDate *m_RequestedDeliveryDate;
	NSString *m_CustomerPurchaseOrderNumber;
    ODataQuery *m_ItemsQuery;
	NSMutableArray *m_Items;

}

@property (strong, nonatomic) SalesOrderStatus *status; ///< status 
@property (strong, nonatomic) NSString *OrderID; ///< OrderID - Edm.String
@property (strong, nonatomic) NSString *OrderType; ///< OrderType - Edm.String
@property (strong, nonatomic) NSString *Description; ///< Description - Edm.String
@property (strong, nonatomic) NSDate *DocumentDate; ///< DocumentDate - Edm.DateTime
@property (strong, nonatomic) NSString *CustomerID; ///< CustomerID - Edm.String
@property (strong, nonatomic) NSString *SalesOrganization; ///< SalesOrganization - Edm.String
@property (strong, nonatomic) NSString *DistribuitonChannel; ///< DistribuitonChannel - Edm.String
@property (strong, nonatomic) NSString *Division; ///< Division - Edm.String
@property (strong, nonatomic) NSDecimalNumber *NetValue; ///< NetValue - Edm.Decimal
@property (strong, nonatomic) NSString *Currency; ///< Currency - Edm.String
@property (strong, nonatomic) NSDate *RequestedDeliveryDate; ///< RequestedDeliveryDate - Edm.DateTime
@property (strong, nonatomic) NSString *CustomerPurchaseOrderNumber; ///< CustomerPurchaseOrderNumber - Edm.String
#pragma mark Entity Navigation Properties
@property (strong, nonatomic) ODataQuery *ItemsQuery;
@property (strong, nonatomic) NSMutableArray *Items;

#pragma mark Static Methods
/**
 Static method that returns an array of SalesDocument entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to SalesDocument entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of SalesDocument entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseSalesDocumentEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of SalesDocument entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to SalesDocument entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of SalesDocument entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedSalesDocumentEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single SalesDocument entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a SalesDocument entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a SalesDocument entity. Returns nil if the data in invalid.
*/
+ (SalesDocument *)parseSalesDocumentEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single SalesDocument entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a SalesDocument entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a SalesDocument entity. Returns nil if the data in invalid.
*/
+ (SalesDocument *)parseExpandedSalesDocumentEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of SalesDocument objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of SalesDocument objects.
*/
+ (NSMutableArray *)createSalesDocumentEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;


#pragma mark Entity Navigation Property loading methods
/**
 Navigation property. Loads Items details for this entity from the provided data.
 @param aData The NSData containing the Items information to be parsed.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns YES if the method completed successfully.
*/
- (BOOL)loadItemsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;


@end

#pragma mark - SalesDocumentItem
@interface SalesDocumentItem : BaseEntityType {
	SalesOrderStatus *m_Status;
	NSDecimalNumber *m_NetValue;
	NSDecimalNumber *m_NetPrice;
	NSString *m_OrderID;
	NSString *m_ItemNumber;
	NSString *m_Material;
	NSString *m_UoM;
	NSString *m_Description;
	NSString *m_Plant;
	NSNumber *m_Quantity;
    ODataQuery *m_SalesDocumentQuery;
	NSMutableArray *m_SalesDocument;

}

@property (strong, nonatomic) SalesOrderStatus *Status; ///< Status 
@property (strong, nonatomic) NSDecimalNumber *NetValue; ///< NetValue - Edm.Decimal
@property (strong, nonatomic) NSDecimalNumber *NetPrice; ///< NetPrice - Edm.Decimal
@property (strong, nonatomic) NSString *OrderID; ///< OrderID - Edm.String
@property (strong, nonatomic) NSString *ItemNumber; ///< ItemNumber - Edm.String
@property (strong, nonatomic) NSString *Material; ///< Material - Edm.String
@property (strong, nonatomic) NSString *UoM; ///< UoM - Edm.String
@property (strong, nonatomic) NSString *Description; ///< Description - Edm.String
@property (strong, nonatomic) NSString *Plant; ///< Plant - Edm.String
@property (strong, nonatomic) NSNumber *Quantity; ///< Int2 - Edm.Int16
#pragma mark Entity Navigation Properties
@property (strong, nonatomic) ODataQuery *SalesDocumentQuery;
@property (strong, nonatomic) NSMutableArray *SalesDocument;

#pragma mark Static Methods
/**
 Static method that returns an array of SalesDocumentItem entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to SalesDocumentItem entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of SalesDocumentItem entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseSalesDocumentItemEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of SalesDocumentItem entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to SalesDocumentItem entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of SalesDocumentItem entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedSalesDocumentItemEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single SalesDocumentItem entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a SalesDocumentItem entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a SalesDocumentItem entity. Returns nil if the data in invalid.
*/
+ (SalesDocumentItem *)parseSalesDocumentItemEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single SalesDocumentItem entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a SalesDocumentItem entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a SalesDocumentItem entity. Returns nil if the data in invalid.
*/
+ (SalesDocumentItem *)parseExpandedSalesDocumentItemEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of SalesDocumentItem objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of SalesDocumentItem objects.
*/
+ (NSMutableArray *)createSalesDocumentItemEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the SALESAPP_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;


#pragma mark Entity Navigation Property loading methods
/**
 Navigation property. Loads SalesDocument details for this entity from the provided data.
 @param aData The NSData containing the SalesDocument information to be parsed.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns YES if the method completed successfully.
*/
- (BOOL)loadSalesDocumentWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;


@end



#pragma mark - SALESAPP_SRV Service Proxy
@interface SALESAPP_SRVService : BaseServiceObject {
    ODataQuery *m_SalesDocumentsQuery;
    ODataQuery *m_SalesDocumentItemsQuery;
    ODataQuery *m_ContactPersonsQuery;
    ODataQuery *m_ImageCollectionQuery;
    ODataQuery *m_MediaCollectionForBusinessPartnerQuery;
    ODataQuery *m_BusinessPartnersQuery;
    ODataQuery *m_MaterialsQuery;

}

#pragma mark Query properties for service Entity Sets
/**
The OData query for the SalesDocument collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *SalesDocumentsQuery;

/**
The OData query for the SalesDocumentItem collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *SalesDocumentItemsQuery;

/**
The OData query for the ContactPerson collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *ContactPersonsQuery;

/**
The OData query for the Image collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *ImageCollectionQuery;

/**
The OData query for the MediaForBusinessPartner collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *MediaCollectionForBusinessPartnerQuery;

/**
The OData query for the BusinessPartner collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *BusinessPartnersQuery;

/**
The OData query for the Material collection.
(Addressable true, Requires-filter false, Creatable true, Updatable true, Deletable true)
*/
@property (strong, nonatomic) ODataQuery *MaterialsQuery;


#pragma mark Service Entity Set methods
/**
 Returns a collection of SalesDocument entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of SalesDocument entities.
*/
- (NSMutableArray *)getSalesDocumentsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific SalesDocument entity.
 @param OrderID Part of the SalesDocument unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getSalesDocumentsEntryQueryWithOrderID:(NSString *)OrderID;

/**
 Returns the OData query for a specific SalesDocument entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param OrderID Part of the SalesDocument unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getSalesDocumentsEntryQueryTypedWithOrderID:(NSString *)OrderID;

/**
 Returns a specific SalesDocument entity from the provided data.
 @param aData The NSData containing the SalesDocument information to be parsed to a SalesDocument entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a SalesDocument entity. Returns nil if the data in invalid.
*/
- (SalesDocument *)getSalesDocumentsEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;
/**
 Returns a collection of SalesDocumentItem entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of SalesDocumentItem entities.
*/
- (NSMutableArray *)getSalesDocumentItemsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific SalesDocumentItem entity.
 @param OrderID Part of the SalesDocumentItem unique identifier (of type Edm.String).
 @param ItemNumber Part of the SalesDocumentItem unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getSalesDocumentItemsEntryQueryWithOrderID:(NSString *)OrderID andItemNumber:(NSString *)ItemNumber;

/**
 Returns the OData query for a specific SalesDocumentItem entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param OrderID Part of the SalesDocumentItem unique identifier (of type Edm.String).
 @param ItemNumber Part of the SalesDocumentItem unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getSalesDocumentItemsEntryQueryTypedWithOrderID:(NSString *)OrderID andItemNumber:(NSString *)ItemNumber;

/**
 Returns a specific SalesDocumentItem entity from the provided data.
 @param aData The NSData containing the SalesDocumentItem information to be parsed to a SalesDocumentItem entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a SalesDocumentItem entity. Returns nil if the data in invalid.
*/
- (SalesDocumentItem *)getSalesDocumentItemsEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;
/**
 Returns a collection of ContactPerson entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of ContactPerson entities.
*/
- (NSMutableArray *)getContactPersonsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific ContactPerson entity.
 @param ContactPersonID Part of the ContactPerson unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getContactPersonsEntryQueryWithContactPersonID:(NSString *)ContactPersonID;

/**
 Returns the OData query for a specific ContactPerson entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param ContactPersonID Part of the ContactPerson unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getContactPersonsEntryQueryTypedWithContactPersonID:(NSString *)ContactPersonID;

/**
 Returns a specific ContactPerson entity from the provided data.
 @param aData The NSData containing the ContactPerson information to be parsed to a ContactPerson entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a ContactPerson entity. Returns nil if the data in invalid.
*/
- (ContactPerson *)getContactPersonsEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;
/**
 Returns a collection of Image entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of Image entities.
*/
- (NSMutableArray *)getImageCollectionWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific Image entity.
 @param ImageType Part of the Image unique identifier (of type Edm.String).
 @param ImageKey Part of the Image unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getImageCollectionEntryQueryWithImageType:(NSString *)ImageType andImageKey:(NSString *)ImageKey;

/**
 Returns the OData query for a specific Image entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param ImageType Part of the Image unique identifier (of type Edm.String).
 @param ImageKey Part of the Image unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getImageCollectionEntryQueryTypedWithImageType:(NSString *)ImageType andImageKey:(NSString *)ImageKey;

/**
 Returns a specific Image entity from the provided data.
 @param aData The NSData containing the Image information to be parsed to a Image entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a Image entity. Returns nil if the data in invalid.
*/
- (Image *)getImageCollectionEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;
/**
 Returns a collection of MediaForBusinessPartner entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of MediaForBusinessPartner entities.
*/
- (NSMutableArray *)getMediaCollectionForBusinessPartnerWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific MediaForBusinessPartner entity.
 @param BusinessPartnerID Part of the MediaForBusinessPartner unique identifier (of type Edm.String).
 @param MediaID Part of the MediaForBusinessPartner unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getMediaCollectionForBusinessPartnerEntryQueryWithBusinessPartnerID:(NSString *)BusinessPartnerID andMediaID:(NSString *)MediaID;

/**
 Returns the OData query for a specific MediaForBusinessPartner entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param BusinessPartnerID Part of the MediaForBusinessPartner unique identifier (of type Edm.String).
 @param MediaID Part of the MediaForBusinessPartner unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getMediaCollectionForBusinessPartnerEntryQueryTypedWithBusinessPartnerID:(NSString *)BusinessPartnerID andMediaID:(NSString *)MediaID;

/**
 Returns a specific MediaForBusinessPartner entity from the provided data.
 @param aData The NSData containing the MediaForBusinessPartner information to be parsed to a MediaForBusinessPartner entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a MediaForBusinessPartner entity. Returns nil if the data in invalid.
*/
- (MediaForBusinessPartner *)getMediaCollectionForBusinessPartnerEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;
/**
 Returns a collection of BusinessPartner entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of BusinessPartner entities.
*/
- (NSMutableArray *)getBusinessPartnersWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific BusinessPartner entity.
 @param PartnerID Part of the BusinessPartner unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getBusinessPartnersEntryQueryWithPartnerID:(NSString *)PartnerID;

/**
 Returns the OData query for a specific BusinessPartner entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param PartnerID Part of the BusinessPartner unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getBusinessPartnersEntryQueryTypedWithPartnerID:(NSString *)PartnerID;

/**
 Returns a specific BusinessPartner entity from the provided data.
 @param aData The NSData containing the BusinessPartner information to be parsed to a BusinessPartner entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a BusinessPartner entity. Returns nil if the data in invalid.
*/
- (BusinessPartner *)getBusinessPartnersEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;
/**
 Returns a collection of Material entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of Material entities.
*/
- (NSMutableArray *)getMaterialsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific Material entity.
 @param MaterialNumber Part of the Material unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getMaterialsEntryQueryWithMaterialNumber:(NSString *)MaterialNumber;

/**
 Returns the OData query for a specific Material entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param MaterialNumber Part of the Material unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getMaterialsEntryQueryTypedWithMaterialNumber:(NSString *)MaterialNumber;

/**
 Returns a specific Material entity from the provided data.
 @param aData The NSData containing the Material information to be parsed to a Material entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a Material entity. Returns nil if the data in invalid.
*/
- (Material *)getMaterialsEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;


#pragma mark Service Function Import methods

/**
 Function Import query. Returns an OData query to ApproveCustomer function import based on the query parameters.
 @param aParameters A dictionary containing the parameters needed for the Function Import. 
 The dictionary keys are the parameter names (PartnerID).
 The dictionary values are the parameter values (as NSString), exactly as they should appear in the query URL, in the correct format according to their types (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an ODataQuery object. This query should be executed using HTTP POST method.
*/
- (ODataQuery *)getApproveCustomerQueryWithParameters:(NSDictionary *)aParameters;

/**
 Function Import query. Returns an OData query to ApproveCustomer function import based on the query typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param PartnerID Parameter of the ApproveCustomer service operation (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getApproveCustomerQueryTypedWithPartnerID:(NSString *)PartnerID;

/**
 Function Import. Returns the result of a function import request.
 @param aData The NSData containing the BusinessPartner information to be parsed.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns BusinessPartner entity. Returns nil if the data is invalid or empty.
*/
- (BusinessPartner *)getApproveCustomerResultWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;


/**
 Function Import query. Returns an OData query to GetImage function import based on the query parameters.
 @param aParameters A dictionary containing the parameters needed for the Function Import. 
 The dictionary keys are the parameter names (Keyword, ID, EntityType).
 The dictionary values are the parameter values (as NSString), exactly as they should appear in the query URL, in the correct format according to their types (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an ODataQuery object. This query should be executed using HTTP POST method.
*/
- (ODataQuery *)getGetImageQueryWithParameters:(NSDictionary *)aParameters;

/**
 Function Import query. Returns an OData query to GetImage function import based on the query typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param Keyword Parameter of the GetImage service operation (of type Edm.String).
 @param ID Parameter of the GetImage service operation (of type Edm.String).
 @param EntityType Parameter of the GetImage service operation (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getGetImageQueryTypedWithKeyword:(NSString *)Keyword andID:(NSString *)ID andEntityType:(NSString *)EntityType;

/**
 Function Import. Returns the result of a function import request.
 @param aData The NSData containing the Image information to be parsed.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns Image entity. Returns nil if the data is invalid or empty.
*/
- (Image *)getGetImageResultWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

@end