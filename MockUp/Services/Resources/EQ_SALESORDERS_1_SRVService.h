/*
 
 Auto-Generated by the SAP NetWeaver Gateway developer tool for Xcode, Version 2.5.300.0
  
 File: EQ_SALESORDERS_1_SRVService.h
 Abstract: The generated proxy classes for the EQ_SALESORDERS_1_SRV Service. Service Version: 1.   
*/

#import <Foundation/Foundation.h>
#import "BaseEntityType.h"
#import "BaseComplexType.h"
#import "BaseServiceObject.h"

#pragma mark - Complex Types



#pragma mark - Entity Types

/**
 Each of the following classes represents an entity-type of the EQ_SALESORDERS_1_SRVService service.
 
 Any entity-type class should be used as following:
 
 1. The entity object may represent an existing entry of an appropriate service collection,
 if the object is initialized using data returned from an appropriate service call.
 This may be achieved by using the initWithSDMEntry: constructor,
 or using the static methods creating the entity object (parse<entity-type-name>EntriesWithData,
 parse<entity-type-name>EntryWithData, and create<entity-type-name>EntriesForSDMEntries).
 
 For retrieving the entry data, use the appropriate query properties and methods of this class 
 and of the EQ_SALESORDERS_1_SRVService class, and then execute the request (see the SDMConnectivityHelper class).
 
 2. Another option is to use this entity object as a new entry to create in an appropriate service collection.
 In this case, use the init constructor and set the appropriate properties. 
 Note that some features (as navigation properties) are not available in this mode (since it is not yet an actual service entry).
 Use the SDMConnectivityHelper class and the getXMLForCreateRequest method of the BaseServiceObject class, to send the 'create' request.
 Then use the service response for constructing a new object, in order to represent the entry as existed in the service. 
 
 In both operation modes, setting the entity property values will not affect the service until the changes are sent to the server.
 For sending changes to the server, see the SDMConnectivityHelper class and the getXMLForRequest methods of the BaseServiceObject class.
 It is recommended to use the server response for constructing a new object, in order to represent the entry as existed in the service.
 
 Note: For proper behavior of this class, make sure to initialize the EQ_SALESORDERS_1_SRVService class
 in your application, before initializing the entity-type class objects.
*/
 

#pragma mark - ZAPP_ORDER03Result
@interface ZAPP_ORDER03Result : BaseEntityType {
	NSString *m_ID;
	NSString *m_CustomerId;
	NSString *m_CustomerName;
	NSString *m_DocumentCategoryId;
	NSString *m_DocumentCategory;
	NSString *m_MaterialGroupId;
	NSString *m_MaterialGroup;
	NSString *m_MaterialId;
	NSString *m_Material;
	NSDecimalNumber *m_NetValue;
	NSString *m_NetValueStringFormat;
	NSDecimalNumber *m_NumberOfItems;
	NSString *m_NumberOfItemsStringFormat;

}

@property (strong, nonatomic) NSString *ID; ///< ID - Edm.String
@property (strong, nonatomic) NSString *CustomerId; ///< Sold-to party - Edm.String
@property (strong, nonatomic) NSString *CustomerName; ///< Sold-to party - Edm.String
@property (strong, nonatomic) NSString *DocumentCategoryId; ///< SD Document Category - Edm.String
@property (strong, nonatomic) NSString *DocumentCategory; ///< SD Document Category - Edm.String
@property (strong, nonatomic) NSString *MaterialGroupId; ///< Material Group - Edm.String
@property (strong, nonatomic) NSString *MaterialGroup; ///< Material Group - Edm.String
@property (strong, nonatomic) NSString *MaterialId; ///< Material - Edm.String
@property (strong, nonatomic) NSString *Material; ///< Material - Edm.String
@property (strong, nonatomic) NSDecimalNumber *NetValue; ///< Net val. in statCurr - Edm.Decimal
@property (strong, nonatomic) NSString *NetValueStringFormat; ///< Net val. in statCurr (Formatted) - Edm.String
@property (strong, nonatomic) NSDecimalNumber *NumberOfItems; ///< No. Document Items - Edm.Decimal
@property (strong, nonatomic) NSString *NumberOfItemsStringFormat; ///< No. Document Items (Formatted) - Edm.String

#pragma mark Static Methods
/**
 Static method that returns an array of ZAPP_ORDER03Result entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to ZAPP_ORDER03Result entities.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of ZAPP_ORDER03Result entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseZAPP_ORDER03ResultEntriesWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of ZAPP_ORDER03Result entities and their related entities from the provided data.
 @param aData The NSData containing an Atom Feed including the entries to be parsed to ZAPP_ORDER03Result entities.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of ZAPP_ORDER03Result entities. Returns nil if the data in invalid.
*/
+ (NSMutableArray *)parseExpandedZAPP_ORDER03ResultEntriesWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Returns a single ZAPP_ORDER03Result entity from the provided data.
 @param aData The NSData containing an Atom Entry including the entry to be parsed to a ZAPP_ORDER03Result entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a ZAPP_ORDER03Result entity. Returns nil if the data in invalid.
*/
+ (ZAPP_ORDER03Result *)parseZAPP_ORDER03ResultEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns a single ZAPP_ORDER03Result entity and related entities from the provided data.
 @param aData The NSData containing an Atom Entry including the entry and its related entries to be parsed to a ZAPP_ORDER03Result entity.
 @param aServiceDocument The SDMODataServiceDocument that represents the service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a ZAPP_ORDER03Result entity. Returns nil if the data in invalid.
*/
+ (ZAPP_ORDER03Result *)parseExpandedZAPP_ORDER03ResultEntryWithData:(NSData *)aData andServiceDocument:(SDMODataServiceDocument *)aServiceDocument error:(NSError * __autoreleasing *)error;

/**
 Static method that returns an array of ZAPP_ORDER03Result objects from a given array of SDMODataEntry objects.
 @param sdmEntries Array of SDMODataEntry objects.
 @return Array of ZAPP_ORDER03Result objects.
*/
+ (NSMutableArray *)createZAPP_ORDER03ResultEntriesForSDMEntries:(NSMutableArray *)sdmEntries;

/**
 Static method that loads the entity schema of this type.
 This method is called when the EQ_SALESORDERS_1_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadEntitySchema:(SDMODataServiceDocument *)aService;

/**
 Static method that loads all of the entity type property labels.
 This method is called when the EQ_SALESORDERS_1_SRVService class is initialized.
 @param aService Service document object containing all of the entity type properties.
*/
+ (void)loadLabels:(SDMODataServiceDocument *)aService;

/**
 Static method that returns the label for a given property name.
 @param aPropertyName Property name.
 @return Property label.
*/
+ (NSString *)getLabelForProperty:(NSString *)aPropertyName;



@end



#pragma mark - EQ_SALESORDERS_1_SRV Service Proxy
@interface EQ_SALESORDERS_1_SRVService : BaseServiceObject {
    ODataQuery *m_ZAPP_ORDER03ResultsQuery;

}

#pragma mark Query properties for service Entity Sets
/**
The OData query for the ZAPP_ORDER03Result collection.
(Addressable true, Requires-filter false, Creatable false, Updatable false, Deletable false)
*/
@property (strong, nonatomic) ODataQuery *ZAPP_ORDER03ResultsQuery;


#pragma mark Service Entity Set methods
/**
 Returns a collection of ZAPP_ORDER03Result entities from the data returned by the OData service.
 @param aData The NSData returned from the OData service.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns an array of ZAPP_ORDER03Result entities.
*/
- (NSMutableArray *)getZAPP_ORDER03ResultsWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

/**
 Returns the OData query for a specific ZAPP_ORDER03Result entity.
 @param ID Part of the ZAPP_ORDER03Result unique identifier (of type Edm.String).
 Note: pass the parameter values exactly as they should appear in the query URL, 
 in the correct format according to their types 
 (for more information, see: http://www.odata.org/documentation/overview#AbstractTypeSystem).
 @return Returns an OData query object.
*/
- (ODataQuery *)getZAPP_ORDER03ResultsEntryQueryWithID:(NSString *)ID;

/**
 Returns the OData query for a specific ZAPP_ORDER03Result entity with typed parameters.
 Note: This method is relevant only for OData compliant services.
 @param ID Part of the ZAPP_ORDER03Result unique identifier (of type Edm.String).
 @return Returns an OData query object.
*/
- (ODataQuery *)getZAPP_ORDER03ResultsEntryQueryTypedWithID:(NSString *)ID;

/**
 Returns a specific ZAPP_ORDER03Result entity from the provided data.
 @param aData The NSData containing the ZAPP_ORDER03Result information to be parsed to a ZAPP_ORDER03Result entity.
 @param error A pointer to an NSError object that will hold the error info if one occurs.
 @return Returns a ZAPP_ORDER03Result entity. Returns nil if the data in invalid.
*/
- (ZAPP_ORDER03Result *)getZAPP_ORDER03ResultsEntryWithData:(NSData *)aData error:(NSError * __autoreleasing *)error;

- (ODataQuery *)getZAPP_ORDER03ResultsEntryQuery;


#pragma mark Service Function Import methods
@end